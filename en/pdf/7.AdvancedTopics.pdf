%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<< /F1 2 0 R /F2 3 0 R /F3 8 0 R >>
endobj
2 0 obj
<< /BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font >>
endobj
3 0 obj
<< /BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font >>
endobj
4 0 obj
<< /A << /S /URI /Type /Action /URI (http://git-scm.com/) >> /Border [ 0 0 0 ] /Rect [ 82.69291 500.7736 532.5827 512.7736 ] /Subtype /Link /Type /Annot >>
endobj
5 0 obj
<< /A << /S /URI /Type /Action /URI (http://www.kernel.org/pub/software/scm/git/docs/user-manual.html) >> /Border [ 0 0 0 ] /Rect [ 82.69291 482.7736 532.5827 494.7736 ] /Subtype /Link /Type /Annot >>
endobj
6 0 obj
<< /A << /S /URI /Type /Action /URI (http://kernel.org/faq/) >> /Border [ 0 0 0 ] /Rect [ 159.9629 290.7736 251.6829 302.7736 ] /Subtype /Link /Type /Annot >>
endobj
7 0 obj
<< /Annots [ 4 0 R 5 0 R 6 0 R ] /Contents 18 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 17 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
8 0 obj
<< /BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font >>
endobj
9 0 obj
<< /A << /S /URI /Type /Action /URI (http://lwn.net/Articles/224135/) >> /Border [ 0 0 0 ] /Rect [ 66.02291 382.5736 197.2029 394.5736 ] /Subtype /Link /Type /Annot >>
endobj
10 0 obj
<< /Annots [ 9 0 R ] /Contents 19 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 17 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 
  /Trans <<  >> /Type /Page >>
endobj
11 0 obj
<< /Contents 20 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 17 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
12 0 obj
<< /Outlines 14 0 R /PageLabels 21 0 R /PageMode /UseNone /Pages 17 0 R /Type /Catalog >>
endobj
13 0 obj
<< /Author () /CreationDate (D:20170628151558-08'00') /Creator (\(unspecified\)) /Keywords () /Producer (ReportLab PDF Library - www.reportlab.com) /Subject (\(unspecified\)) 
  /Title (Advanced topics) >>
endobj
14 0 obj
<< /Count 2 /First 15 0 R /Last 16 0 R /Type /Outlines >>
endobj
15 0 obj
<< /Dest [ 7 0 R /XYZ 62.69291 683.0236 0 ] /Next 16 0 R /Parent 14 0 R /Title (Managing patches with git) >>
endobj
16 0 obj
<< /Dest [ 10 0 R /XYZ 62.69291 219.8236 0 ] /Parent 14 0 R /Prev 15 0 R /Title (Reviewing patches) >>
endobj
17 0 obj
<< /Count 3 /Kids [ 7 0 R 10 0 R 11 0 R ] /Type /Pages >>
endobj
18 0 obj
<< /Length 6905 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 154.9249 0 Td (Advanced topics) Tj T* -154.9249 0 Td ET
Q
Q
q
1 0 0 1 62.69291 695.0236 cm
q
BT 1 0 0 1 0 26 Tm .599431 Tw 12 TL /F1 10 Tf 0 0 0 rg (At this point, hopefully, you have a handle on how the development process works. There is still more to) Tj T* 0 Tw .50528 Tw (learn, however! This section will cover a number of topics which can be helpful for developers wanting to) Tj T* 0 Tw (become a regular part of the Linux kernel development process.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 662.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Managing patches with git) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 596.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .667045 Tw (The use of distributed version control for the kernel began in early 2002, when Linus first started playing) Tj T* 0 Tw 1.22498 Tw (with the proprietary BitKeeper application. While BitKeeper was controversial, the approach to software) Tj T* 0 Tw 3.911647 Tw (version management it embodied most certainly was not. Distributed version control enabled an) Tj T* 0 Tw 3.183059 Tw (immediate acceleration of the kernel development project. In current times, there are several free) Tj T* 0 Tw (alternatives to BitKeeper. For better or for worse, the kernel project has settled on git as its tool of choice.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 518.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F1 10 Tf 12 TL .27528 Tw (Managing patches with git can make life much easier for the developer, especially as the volume of those) Tj T* 0 Tw .999987 Tw (patches grows. Git also has its rough edges and poses certain hazards; it is a young and powerful tool) Tj T* 0 Tw .817209 Tw (which is still being civilized by its developers. This document will not attempt to teach the reader how to) Tj T* 0 Tw .684724 Tw (use git; that would be sufficient material for a long document in its own right. Instead, the focus here will) Tj T* 0 Tw .754431 Tw (be on how git fits into the kernel development process in particular. Developers who wish to come up to) Tj T* 0 Tw (speed with git will find more information at:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 512.0236 cm
Q
q
1 0 0 1 62.69291 482.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (http://git-scm.com/) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 .501961 rg
0 0 .501961 RG
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (http://www.kernel.org/pub/software/scm/git/docs/user-manual.html) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 482.0236 cm
Q
q
1 0 0 1 62.69291 464.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and on various tutorials found on the web.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 374.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 74 Tm /F1 10 Tf 12 TL .038488 Tw (The first order of business is to read the above sites and get a solid understanding of how git works before) Tj T* 0 Tw .361567 Tw (trying to use it to make patches available to others. A git-using developer should be able to obtain a copy) Tj T* 0 Tw .327485 Tw (of the mainline repository, explore the revision history, commit changes to the tree, use branches, etc. An) Tj T* 0 Tw .803876 Tw (understanding of git's tools for the rewriting of history \(such as rebase\) is also useful. Git comes with its) Tj T* 0 Tw 1.298735 Tw (own terminology and concepts; a new user of git should know about refs, remote branches, the index,) Tj T* 0 Tw .306457 Tw (fast-forward merges, pushes and pulls, detached heads, etc. It can all be a little intimidating at the outset,) Tj T* 0 Tw (but the concepts are not that hard to grasp with a bit of study.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 356.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Using git to generate patches for submission by email can be a good exercise while coming up to speed.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 290.0236 cm
q
BT 1 0 0 1 0 50 Tm .085444 Tw 12 TL /F1 10 Tf 0 0 0 rg (When you are ready to start putting up git trees for others to look at, you will, of course, need a server that) Tj T* 0 Tw 1.191751 Tw (can be pulled from. Setting up such a server with git-daemon is relatively straightforward if you have a) Tj T* 0 Tw .573318 Tw (system which is accessible to the Internet. Otherwise, free, public hosting sites \(Github, for example\) are) Tj T* 0 Tw .402339 Tw (starting to appear on the net. Established developers can get an account on kernel.org, but those are not) Tj T* 0 Tw (easy to come by; see ) Tj 0 0 .501961 rg (http://kernel.org/faq/ ) Tj 0 0 0 rg (for more information.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 212.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F1 10 Tf 12 TL .22832 Tw (The normal git workflow involves the use of a lot of branches. Each line of development can be separated) Tj T* 0 Tw 2.133318 Tw (into a separate "topic branch" and maintained independently. Branches in git are cheap, there is no) Tj T* 0 Tw .009488 Tw (reason to not make free use of them. And, in any case, you should not do your development in any branch) Tj T* 0 Tw 1.905984 Tw (which you intend to ask others to pull from. Publicly-available branches should be created with care;) Tj T* 0 Tw 1.713516 Tw (merge in patches from development branches when they are in complete form and ready to go - not) Tj T* 0 Tw (before.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 134.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F1 10 Tf 12 TL 4.068555 Tw (Git provides some powerful tools which can allow you to rewrite your development history. An) Tj T* 0 Tw .07881 Tw (inconvenient patch \(one which breaks bisection, say, or which has some other sort of obvious bug\) can be) Tj T* 0 Tw .817988 Tw (fixed in place or made to disappear from the history entirely. A patch series can be rewritten as if it had) Tj T* 0 Tw .94528 Tw (been written on top of today's mainline, even though you have been working on it for months. Changes) Tj T* 0 Tw .368876 Tw (can be transparently shifted from one branch to another. And so on. Judicious use of git's ability to revise) Tj T* 0 Tw (history can help in the creation of clean patch sets with fewer problems.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 80.02362 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.09061 Tw (Excessive use of this capability can lead to other problems, though, beyond a simple obsession for the) Tj T* 0 Tw .721318 Tw (creation of the perfect project history. Rewriting history will rewrite the changes contained in that history,) Tj T* 0 Tw .938651 Tw (turning a tested \(hopefully\) kernel tree into an untested one. But, beyond that, developers cannot easily) Tj T* 0 Tw 1.711654 Tw (collaborate if they do not have a shared view of the project history; if you rewrite history which other) Tj T* 0 Tw ET
Q
Q
 
endstream
endobj
19 0 obj
<< /Length 6733 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 729.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .499318 Tw (developers have pulled into their repositories, you will make life much more difficult for those developers.) Tj T* 0 Tw 1.124692 Tw (So a simple rule of thumb applies here: history which has been exported to others should generally be) Tj T* 0 Tw (seen as immutable thereafter.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 639.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 74 Tm /F1 10 Tf 12 TL 2.166235 Tw (So, once you push a set of changes to your publicly-available server, those changes should not be) Tj T* 0 Tw 2.82104 Tw (rewritten. Git will attempt to enforce this rule if you try to push changes which do not result in a) Tj T* 0 Tw 1.92686 Tw (fast-forward merge \(i.e. changes which do not share the same history\). It is possible to override this) Tj T* 0 Tw 1.856235 Tw (check, and there may be times when it is necessary to rewrite an exported tree. Moving changesets) Tj T* 0 Tw .259987 Tw (between trees to avoid conflicts in linux-next is one example. But such actions should be rare. This is one) Tj T* 0 Tw .153735 Tw (of the reasons why development should be done in private branches \(which can be rewritten if necessary\)) Tj T* 0 Tw (and only moved into public branches when it's in a reasonably advanced state.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 537.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 86 Tm /F1 10 Tf 12 TL .977356 Tw (As the mainline \(or other tree upon which a set of changes is based\) advances, it is tempting to merge) Tj T* 0 Tw .485227 Tw (with that tree to stay on the leading edge. For a private branch, rebasing can be an easy way to keep up) Tj T* 0 Tw .203488 Tw (with another tree, but rebasing is not an option once a tree is exported to the world. Once that happens, a) Tj T* 0 Tw .238651 Tw (full merge must be done. Merging occasionally makes good sense, but overly frequent merges can clutter) Tj T* 0 Tw 1.125984 Tw (the history needlessly. Suggested technique in this case is to merge infrequently, and generally only at) Tj T* 0 Tw 1.092485 Tw (specific release points \(such as a mainline -rc release\). If you are nervous about specific changes, you) Tj T* 0 Tw .391098 Tw (can always perform test merges in a private branch. The git "rerere" tool can be useful in such situations;) Tj T* 0 Tw (it remembers how merge conflicts were resolved so that you don't have to do the same work twice.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 471.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .99528 Tw (One of the biggest recurring complaints about tools like git is this: the mass movement of patches from) Tj T* 0 Tw .229431 Tw (one repository to another makes it easy to slip in ill-advised changes which go into the mainline below the) Tj T* 0 Tw .56686 Tw (review radar. Kernel developers tend to get unhappy when they see that kind of thing happening; putting) Tj T* 0 Tw .917882 Tw (up a git tree with unreviewed or off-topic patches can affect your ability to get trees pulled in the future.) Tj T* 0 Tw (Quoting Linus:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 401.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 60 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F3 10 Tf 12 TL (You can send me patches, but for me to pull a git patch from you, I) Tj T* (need to know that you know what you're doing, and I need to be able) Tj T* (to trust things *without* then having to go and check every) Tj T* (individual change by hand.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 381.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (\() Tj 0 0 .501961 rg (http://lwn.net/Articles/224135/) Tj 0 0 0 rg (\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 327.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .197765 Tw (To avoid this kind of situation, ensure that all patches within a given branch stick closely to the associated) Tj T* 0 Tw .438735 Tw (topic; a "driver fixes" branch should not be making changes to the core memory management code. And,) Tj T* 0 Tw .53832 Tw (most importantly, do not use a git tree to bypass the review process. Post an occasional summary of the) Tj T* 0 Tw (tree to the relevant list, and, when the time is right, request that the tree be included in linux-next.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 285.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.480542 Tw (If and when others start to send patches for inclusion into your tree, don't forget to review them. Also) Tj T* 0 Tw .641751 Tw (ensure that you maintain the correct authorship information; the git "am" tool does its best in this regard,) Tj T* 0 Tw (but you may have to add a "From:" line to the patch if it has been relayed to you via a third party.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 231.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.124431 Tw (When requesting a pull, be sure to give all the relevant information: where your tree is, what branch to) Tj T* 0 Tw 2.00881 Tw (pull, and what changes will result from the pull. The git request-pull command can be helpful in this) Tj T* 0 Tw .421567 Tw (regard; it will format the request as other developers expect, and will also check to be sure that you have) Tj T* 0 Tw (remembered to push those changes to the public server.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 198.8236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Reviewing patches) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 132.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL .50811 Tw (Some readers will certainly object to putting this section with "advanced topics" on the grounds that even) Tj T* 0 Tw .339986 Tw (beginning kernel developers should be reviewing patches. It is certainly true that there is no better way to) Tj T* 0 Tw 1.38528 Tw (learn how to program in the kernel environment than by looking at code posted by others. In addition,) Tj T* 0 Tw 1.158221 Tw (reviewers are forever in short supply; by looking at code you can make a significant contribution to the) Tj T* 0 Tw (process as a whole.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 78.82362 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL .39811 Tw (Reviewing code can be an intimidating prospect, especially for a new kernel developer who may well feel) Tj T* 0 Tw .274104 Tw (nervous about questioning code - in public - which has been posted by those with more experience. Even) Tj T* 0 Tw 1.384651 Tw (code written by the most experienced developers can be improved, though. Perhaps the best piece of) Tj T* 0 Tw 1.015697 Tw (advice for reviewers \(all reviewers\) is this: phrase review comments as questions rather than criticisms.) Tj T* 0 Tw ET
Q
Q
 
endstream
endobj
20 0 obj
<< /Length 1112 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .100542 Tw (Asking "how does the lock get released in this path?" will always work better than stating "the locking here) Tj T* 0 Tw (is wrong.") Tj T* ET
Q
Q
q
1 0 0 1 62.69291 663.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F1 10 Tf 12 TL 2.28284 Tw (Different developers will review code from different points of view. Some are mostly concerned with) Tj T* 0 Tw .676235 Tw (coding style and whether code lines have trailing white space. Others will focus primarily on whether the) Tj T* 0 Tw .036655 Tw (change implemented by the patch as a whole is a good thing for the kernel or not. Yet others will check for) Tj T* 0 Tw .020814 Tw (problematic locking, excessive stack usage, possible security issues, duplication of code found elsewhere,) Tj T* 0 Tw 2.14748 Tw (adequate documentation, adverse effects on performance, user-space ABI changes, etc. All types of) Tj T* 0 Tw (review, if they lead to better code going into the kernel, are welcome and worthwhile.) Tj T* ET
Q
Q
 
endstream
endobj
21 0 obj
<< /Nums [ 0 22 0 R 1 23 0 R 2 24 0 R ] >>
endobj
22 0 obj
<< /S /D /St 1 >>
endobj
23 0 obj
<< /S /D /St 2 >>
endobj
24 0 obj
<< /S /D /St 3 >>
endobj
xref
0 25
0000000000 65535 f
0000000075 00000 n
0000000129 00000 n
0000000239 00000 n
0000000354 00000 n
0000000528 00000 n
0000000747 00000 n
0000000924 00000 n
0000001163 00000 n
0000001271 00000 n
0000001457 00000 n
0000001685 00000 n
0000001895 00000 n
0000002004 00000 n
0000002230 00000 n
0000002307 00000 n
0000002436 00000 n
0000002558 00000 n
0000002635 00000 n
0000009597 00000 n
0000016387 00000 n
0000017556 00000 n
0000017618 00000 n
0000017655 00000 n
0000017692 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com)
 [(\244\364Lo0\263<\337\360K\376\003o\310\360~) (\244\364Lo0\263<\337\360K\376\003o\310\360~)]
 /Info 13 0 R /Root 12 0 R /Size 25 >>
startxref
17729
%%EOF
